export const timeComplexities = {
  "Bubble Sort": "O(n²)",
  "Bucket Sort": "O(n + k)",
  "Counting Sort": "O(n + k)",
  "Heap Sort": "O(n log n)",
  "Insertion Sort": "O(n²)",
  "Inplace Merge Sort": "O(n log n)",
  "Intro Sort": "O(n log n)",
  "Merge Sort (Bottom Up)": "O(n log n)",
  "Merge Sort (Top Down)": "O(n log n)",
  "Pancake Sort": "O(n²)",
  "Parallel Merge Sort": "O(n log n)",
  "Quick Sort": "O(n log n)",
  "Radix Sort (LSD)": "O(nk)",
  "Radix Sort (MSD)": "O(nk)",
  "Selection Sort": "O(n²)",
  "Shell Sort": "O(n log n)",
  "Tim Sort": "O(n log n)",
  
  // Add other algorithms as needed
};

export const spaceComplexities = {
  "Bubble Sort": "O(1)",
  "Bucket Sort": "O(n + k)",
  "Counting Sort": "O(k)",
  "Heap Sort": "O(1)",
  "Insertion Sort": "O(1)",
  "Inplace Merge Sort": "O(1)",
  "Intro Sort": "O(log n)",
  "Merge Sort (Bottom Up)": "O(n)",
  "Merge Sort (Top Down)": "O(n)",
  "Pancake Sort": "O(n)",
  "Parallel Merge Sort": "O(n)",
  "Quick Sort": "O(log n)",
  "Radix Sort (LSD)": "O(n + k)",
  "Radix Sort (MSD)": "O(n + k)",
  "Selection Sort": "O(1)",
  "Shell Sort": "O(1)",
  "Tim Sort": "O(n)",
};